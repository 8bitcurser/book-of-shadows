package views

import "book-of-shadows/models"
import "strconv"
import "sort"
import "strings"


templ CharacterSheet(investigator *models.Investigator) {
    @hidden(investigator)
    <div class="container-fluid first-page">
        <div class="row g-3">
            <div class="col">
                <div class="row">
                    <label for={investigator.ID} class="col-sm-1 col-form-label">Name</label>
                    <div class="col-sm-11">
                        <input
                            type="text"
                            id={ investigator.ID }
                            class="form-control"
                            value={ investigator.Name }
                            data-field="Name"
                            onchange="characterUtils.updatePersonalInfo(this)"
                        />
                    </div>
                </div>

                <div class="row">
                    <label for="inv-age" class="col-sm-1 col-form-label">Age</label>
                    <div class="col-sm-11">
                        <input
                            type="number"
                            class="form-control"
                            value={ strconv.Itoa(investigator.Age) }
                            data-field="Age"
                            onchange="characterUtils.updatePersonalInfo(this)"
                        />
                    </div>
                </div>

                <div class="row">
                    <div class="col-auto">
                        <label for="inv-res" class="col-sm-1 col-form-label">Residence</label>
                        <div class="col-sm-11">
                            <input
                                type="text"
                                id="inv-res"
                                class="form-control"
                                value={ investigator.Residence }
                                data-field="Residence"
                                onchange="characterUtils.updatePersonalInfo(this)"
                            />
                        </div>
                    </div>
                    <div class="col-auto">
                        <label for="inv-birth" class="col-sm-1 col-form-label">Birthplace</label>
                        <div class="col-sm-11">
                        <input
                            id="inv-birth"
                            type="text"
                            class="form-control"
                            value={ investigator.Birthplace }
                            data-field="Birthplace"
                            onchange="characterUtils.updatePersonalInfo(this)"
                        />
                        </div>
                    </div>
                </div>


                <label  class="col-form-label">Occupation</label>
                <p class="" data-field="occupation">{ investigator.Occupation.Name }</p>

                <p class="" >Archetype</p>
                <p class="" data-field="archetype">{ investigator.Archetype.Name }</p>
            </div>
            <div class="col">
                <div class="row">
                    <h2 class="">Attributes</h2>
                    for _, attr := range investigator.Attributes {
                        if (!strings.HasPrefix(attr.Name, "Current")) {
                            <div class="col-auto">
                                <span class="">{ attr.Name }</span>
                                <div class="">
                                    <span class="" data-attr={attr.Name} title="Regular">{ strconv.Itoa(attr.Value) }</span>
                                    <span class="">|</span>
                                    <span class="" title="Half value" data-half>{ strconv.Itoa(attr.Value/2) }</span>
                                    <span class="">|</span>
                                    <span class="" title="Fifth value" data-fifth>{ strconv.Itoa(attr.Value/5) }</span>
                                </div>
                            </div>
                        }
                    }
                </div>

                <div class="row">
                    <h2 class="" style="">Combat</h2>
                    <div class="col-auto">
                        <span class="">HP</span>
                        <input
                            type="number"
                            class="form-control"
                            value={ strconv.Itoa(investigator.Attributes["HitPoints"].Value) }
                            data-attr="HitPoints"
                            title="CurrentHP"
                            min="0"
                            onchange="characterUtils.recalculateValues(this, 'attribute')"
                        />
                    </div>
                    <div class="col-auto">
                        <span class="">MP</span>
                        <input
                            type="number"
                            class="form-control"
                            value={ strconv.Itoa(investigator.Attributes["MagicPoints"].Value) }
                            data-attr="MagicPoints"
                            title="CurrentMP"
                            min="0"
                            onchange="characterUtils.recalculateValues(this, 'attribute')"
                        />
                    </div>
                    <div class="col-auto">
                        <span class="">Luck</span>
                        <input
                            type="number"
                            class="form-control"
                            value={ strconv.Itoa(investigator.Attributes["Luck"].Value) }
                            data-attr="Luck"
                            title="CurrentLuck"
                            min="0"
                            onchange="characterUtils.recalculateValues(this, 'attribute')"
                        />
                    </div>
                    <div class="col-auto">
                        <span class="font-medium">Sanity</span>
                        <input
                            type="number"
                            class="form-control"
                            value={ strconv.Itoa(investigator.Attributes["Sanity"].Value) }
                            data-attr="Sanity"
                            title="CurrentSanity"
                            onchange="characterUtils.recalculateValues(this, 'attribute')"
                            min="0"
                        />
                    </div>
                    <div class="col-auto">
                        <span class="">Movement</span>
                        <p data-field="move">{ strconv.Itoa(investigator.Move) }</p>
                    </div>
                    <div class="col-auto">
                        <span class="">Build</span>
                        <p data-field="build">{ investigator.Build }</p>
                    </div>
                    <div class="col-auto">
                        <span class="">DB</span>
                        <p data-field="dmgbonus">{ investigator.DamageBonus }</p>
                    </div>
                </div>
            </div>
        </div>

        if len(investigator.Talents) > 0 {
            <div class="">
                <h2 class="">Pulp Talents</h2>
                <div class="" data-field="talents">
                    for _, talent := range investigator.Talents {
                        <div class="">
                            <h3 class="">{ talent.Name }</h3>
                            <p class="">{ talent.Description }</p>
                        </div>
                    }
                </div>
            </div>
        }

    </div>

    <div class="second-page">
        <div class="container-fluid">
            <h2 class="">Skills</h2>

            <div class="">
                <div class="">
                    <span class="">Occupation Points:</span>
                    <span class="">
                        { strconv.Itoa(investigator.OccupationPoints) }
                    </span>
                </div>
                <div class="">
                    <span class="">Archetype Points:</span>
                    <span class="">
                        { strconv.Itoa(investigator.ArchetypePoints) }
                    </span>
                </div>
                <div class="">
                    <span class="">Common interest Points:</span>
                    <span class="">
                        { strconv.Itoa(investigator.FreePoints) }
                    </span>
                </div>
            </div>

            <div class="">
                <div class="">
                    for _, skill := range sortSkills(investigator.Skills) {
                        if skill.Name != "" && skill.Name != "Dodge_Copy"  && skill.Base == 0 {
                            <div class="flex justify-between items-center py-1 border-b border-gray-200 last:border-0">
                                <input
                                    type="checkbox"
                                    class=""
                                    data-skill={ skill.Name }
                                    if skill.IsSelected {
                                            checked
                                        }
                                    onchange="characterUtils.handleSkillToggleCheck(this)"
                                />
                               if skill.NeedsFormDef == 1 {
                                <input
                                    type="text"
                                    class=""
                                    value={ skill.Name }
                                    data-skill={ skill.Name }
                                    onchange="characterUtils.handleSkillNameChange(this)"
                                />
                               } else {
                                    <span
                                        class=""
                                        title={ "Default: " + strconv.Itoa(skill.Default) + " | Points Assigned: " + strconv.Itoa(skill.Value - skill.Default) }
                                    >{ skill.Name }
                                    </span>
                                }
                                <div class="">
                                    <input
                                        type="number"
                                        class=""
                                        value={ strconv.Itoa(skill.Value) }
                                        data-skill={ skill.Name }
                                        onchange="characterUtils.recalculateValues(this, 'skill')"
                                        title="Regular"
                                        min={ strconv.Itoa(skill.Default) }
                                    />
                                    <span class="">|</span>
                                    <span class="" title="Half value" data-half>{ strconv.Itoa(skill.Value/2) }</span>
                                    <span class="">|</span>
                                    <span class="" title="Fifth value" data-fifth>{ strconv.Itoa(skill.Value/5) }</span>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}

func sortSkills(skills map[string]models.Skill) []models.Skill {
    // Create a slice to hold the skills
    var skillSlice []models.Skill

    // Convert map to slice
    for _, skill := range skills {
        if skill.Name != "" && skill.Name != "Dodge_Copy" {
            skillSlice = append(skillSlice, skill)
        }
    }

    // Sort the slice by name
    sort.Slice(skillSlice, func(i, j int) bool {
        return skillSlice[i].Name < skillSlice[j].Name
    })

    return skillSlice
}

templ hidden(investigator *models.Investigator) {
    <input
        type="hidden"
        id="currentCharacter"
        value={ mustJson(investigator) }
    />
}