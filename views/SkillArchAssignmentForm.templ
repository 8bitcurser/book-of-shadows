package views

import "book-of-shadows/models"
import "strconv"
import "fmt"

templ SkillArchAssignmentForm(investigator *models.Investigator) {
    <div class="container-fluid p-3 coc-sheet">
        <input
            type="text"
            id={ investigator.ID }
            class="d-none"
            value={ investigator.Name }
            data-field="Name"
            onchange="characterUtils.updatePersonalInfo(this)"
        />

        <!-- Tab navigation -->
        <ul class="nav nav-tabs mb-4" id="skillsTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button
                    class="nav-link active"
                    id="archetype-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#archetype-skills"
                    type="button"
                    role="tab"
                    aria-controls="archetype-skills"
                    aria-selected="true"
                >
                    Archetype Skills
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button
                    class="nav-link"
                    id="occupation-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#occupation-skills"
                    type="button"
                    role="tab"
                    aria-controls="occupation-skills"
                    aria-selected="false"
                    disabled
                >
                    Occupation Skills
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button
                    class="nav-link"
                    id="general-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#general-skills"
                    type="button"
                    role="tab"
                    aria-controls="general-skills"
                    aria-selected="false"
                    disabled
                >
                    General Skills
                </button>
            </li>
        </ul>

        <!-- Tab content -->
        <div class="tab-content" id="skillsTabContent">
            <!-- Archetype Skills Tab -->
            <div class="tab-pane fade show active" id="archetype-skills" role="tabpanel" aria-labelledby="archetype-tab">
                <h2 class="text-xl font-bold mb-3" style="color: #373A40">Archetype Skills</h2>

                <div class="alert alert-light mb-3">
                    <span class="text-secondary">Archetype Points:</span>
                    <span class="fw-medium ms-1" id="archetype-points">
                        { strconv.Itoa(investigator.ArchetypePoints) }
                    </span>
                    <span class="text-secondary ms-2">Points Remaining:</span>
                    <span class="fw-medium ms-1" id="archetype-points-remaining">{ strconv.Itoa(investigator.ArchetypePoints) }</span>
                </div>

                <div class="card mb-3">
                    <div class="card-body">
                        <div class="row g-3">
                            for _, skillConfiguration := range investigator.Archetype.Skills {
                                {{skill := investigator.Skills[skillConfiguration]}}
                                if skill.Name != "" && skill.Name != "Dodge_Copy" && skill.Base == 0 {
                                    <div class="col-md-6">
                                        <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                            <span
                                                class="skill-name"
                                                title={ "Default: " + strconv.Itoa(skill.Default) + " | Points Assigned: " + strconv.Itoa(skill.Value - skill.Default) }
                                            >{ skill.Name }
                                            </span>
                                            <div class="d-flex align-items-center">
                                                <input
                                                    type="number"
                                                    class="form-control form-control-sm skill-input me-1"
                                                    style="width: 60px;"
                                                    value={ strconv.Itoa(skill.Value) }
                                                    data-skill={ skill.Name }
                                                    data-skillvalue={ strconv.Itoa(skill.Value) }
                                                    data-skilltype="archetype"
                                                    onchange="characterUtils.updateSkillAndPoints(this)"
                                                    title="Regular"
                                                    min={ strconv.Itoa(skill.Default) }
                                                />
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Half value" data-half>{ strconv.Itoa(skill.Value/2) }</span>
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Fifth value" data-fifth>{ strconv.Itoa(skill.Value/5) }</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end">
                    <button
                        id="archetype-continue-btn"
                        type="button"
                        class="btn btn-primary"
                        onclick="characterUtils.continueToOccupation()"
                        disabled
                    >
                        Continue to Occupation Skills
                    </button>
                </div>
            </div>

            <!-- Occupation Skills Tab -->
            <div class="tab-pane fade" id="occupation-skills" role="tabpanel" aria-labelledby="occupation-tab">
                <h2 class="text-xl font-bold mb-3" style="color: #373A40">Occupation Skills</h2>

                <div class="alert alert-light mb-3">
                    <span class="text-secondary">Occupation Points:</span>
                    <span class="fw-medium ms-1" id="occupation-points">
                        { strconv.Itoa(investigator.OccupationPoints) }
                    </span>
                    <span class="text-secondary ms-2">Points Remaining:</span>
                    <span class="fw-medium ms-1" id="occupation-points-remaining">{ strconv.Itoa(investigator.OccupationPoints) }</span>
                </div>

                <div class="card mb-3">
                    <div class="card-body">
                        <div class="row g-3">
                            for _, skillConfiguration := range *investigator.GetOccupationSkills() {
                                {{skill := investigator.Skills[skillConfiguration]}}
                                if skill.Name != "" && skill.Name != "Dodge_Copy" && skill.Base == 0 {
                                    <div class="col-md-6">
                                        <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                            <span
                                                class="skill-name"
                                                title={ "Default: " + strconv.Itoa(skill.Default) + " | Points Assigned: " + strconv.Itoa(skill.Value - skill.Default) }
                                            >{ skill.Name }
                                            </span>
                                            <div class="d-flex align-items-center">
                                                <input
                                                    type="number"
                                                    class="form-control form-control-sm skill-input me-1"
                                                    style="width: 60px;"
                                                    value={ strconv.Itoa(skill.Value) }
                                                    data-skill={ skill.Name }
                                                    data-skillvalue={ strconv.Itoa(skill.Value) }
                                                    data-skilltype="occupation"
                                                    onchange="characterUtils.updateSkillAndPoints(this)"
                                                    title="Regular"
                                                    min={ strconv.Itoa(skill.Default) }
                                                    max="95"
                                                />
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Half value" data-half>{ strconv.Itoa(skill.Value/2) }</span>
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Fifth value" data-fifth>{ strconv.Itoa(skill.Value/5) }</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <button
                        type="button"
                        class="btn btn-outline-secondary"
                        onclick="characterUtils.backToArchetype()"
                    >
                        Back to Archetype Skills
                    </button>
                    <button
                        id="occupation-continue-btn"
                        type="button"
                        class="btn btn-primary"
                        onclick="characterUtils.continueToGeneral()"
                        disabled
                    >
                        Continue to General Skills
                    </button>
                </div>
            </div>

            <!-- General Skills Tab -->
            <div class="tab-pane fade" id="general-skills" role="tabpanel" aria-labelledby="general-tab">
                <h2 class="text-xl font-bold mb-3" style="color: #373A40">General Skills</h2>

                <div class="alert alert-light mb-3">
                    <span class="text-secondary">General Points:</span>
                    <span class="fw-medium ms-1" id="general-points">
                        { strconv.Itoa(investigator.FreePoints) }
                    </span>
                    <span class="text-secondary ms-2">Points Remaining:</span>
                    <span class="fw-medium ms-1" id="general-points-remaining">{ strconv.Itoa(investigator.FreePoints) }</span>
                </div>

                <div class="card mb-3">
                    <div class="card-body">
                        <div class="skills-grid">
                            for _, skill := range investigator.Skills {
                                if skill.Name != "" && skill.Name != "Dodge_Copy" && skill.Base == 0 {
                                    <div class="skill-item">
                                        <div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                                            <span
                                                class="skill-name"
                                                title={ "Default: " + strconv.Itoa(skill.Default) + " | Points Assigned: " + strconv.Itoa(skill.Value - skill.Default) }
                                            >{ skill.Name }
                                            </span>
                                            <div class="d-flex align-items-center">
                                                <input
                                                    type="number"
                                                    class="form-control form-control-sm skill-input me-1"
                                                    style="width: 60px;"
                                                    value={ strconv.Itoa(skill.Value) }
                                                    data-skill={ skill.Name }
                                                    data-skillvalue={ strconv.Itoa(skill.Value) }
                                                    data-skilltype="general"
                                                    onchange="characterUtils.updateSkillAndPoints(this)"
                                                    title="Regular"
                                                    min={ strconv.Itoa(skill.Default) }
                                                />
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Half value" data-half>{ strconv.Itoa(skill.Value/2) }</span>
                                                <span class="text-secondary mx-1">|</span>
                                                <span class="mx-1" title="Fifth value" data-fifth>{ strconv.Itoa(skill.Value/5) }</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <button
                        type="button"
                        class="btn btn-outline-secondary"
                        onclick="characterUtils.backToOccupation()"
                    >
                        Back to Occupation Skills
                    </button>
                    <button
                        id="finish-btn"
                        type="button"
                        class="btn btn-primary"
                        hx-get={ fmt.Sprintf("/api/investigator/%s", investigator.ID) }
                        hx-target="#character-sheet"
                        disabled
                    >
                        Complete Character
                    </button>
                </div>
            </div>
        </div>
    </div>

    <style>
        .coc-sheet {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #fff;
            border-radius: 8px;
        }

        .skill-name {
            font-size: 0.95rem;
        }

        .skills-grid {
            column-count: 2;
            column-gap: 20px;
        }

        .skill-item {
            break-inside: avoid;
            page-break-inside: avoid;
            -webkit-column-break-inside: avoid;
        }

        @media (max-width: 767px) {
            .skills-grid {
                column-count: 1;
            }
        }
    </style>

    <script>
        // Initialize characterUtils if it doesn't exist
        if (!window.characterUtils) {
            window.characterUtils = {};
        }

        // Skill point tracking and validation
        window.characterUtils.skillPoints = {
            archetype: {
                total: parseInt(document.getElementById('archetype-points').textContent),
                remaining: parseInt(document.getElementById('archetype-points').textContent),
                initialValues: {}
            },
            occupation: {
                total: parseInt(document.getElementById('occupation-points').textContent),
                remaining: parseInt(document.getElementById('occupation-points').textContent),
                initialValues: {}
            },
            general: {
                total: parseInt(document.getElementById('general-points').textContent),
                remaining: parseInt(document.getElementById('general-points').textContent),
                initialValues: {}
            }
        };

        // Store initial skill values
        window.characterUtils.initializeSkillValues = function() {
            // Archetype skills
            document.querySelectorAll('#archetype-skills .skill-input').forEach(input => {
                const skillName = input.dataset.skill;
                this.skillPoints.archetype.initialValues[skillName] = parseInt(input.dataset.skillvalue);
            });

            // Occupation skills
            document.querySelectorAll('#occupation-skills .skill-input').forEach(input => {
                const skillName = input.dataset.skill;
                this.skillPoints.occupation.initialValues[skillName] = parseInt(input.dataset.skillvalue);
            });

            // General skills
            document.querySelectorAll('#general-skills .skill-input').forEach(input => {
                const skillName = input.dataset.skill;
                this.skillPoints.general.initialValues[skillName] = parseInt(input.dataset.skillvalue);
            });
        };

        // Update skill value and calculate points
        window.characterUtils.updateSkillAndPoints = function(input) {
            const skillName = input.dataset.skill;
            const skillType = input.dataset.skilltype;
            const oldValue = this.skillPoints[skillType].initialValues[skillName];
            const newValue = parseInt(input.value);
            const pointChange = newValue - oldValue;

            // Update points remaining
            this.skillPoints[skillType].remaining -= pointChange;

            // Update the display
            document.getElementById(`${skillType}-points-remaining`).textContent =
                this.skillPoints[skillType].remaining;

            // Update half and fifth values
            const halfValue = Math.floor(newValue / 2);
            const fifthValue = Math.floor(newValue / 5);

            // Find the sibling spans and update them
            const container = input.closest('div');
            container.querySelector('[data-half]').textContent = halfValue;
            container.querySelector('[data-fifth]').textContent = fifthValue;

            // Check if all points are allocated
            this.checkSkillPointsAllocation(skillType);
        };

        // Check if all points are allocated for the current skill type
        window.characterUtils.checkSkillPointsAllocation = function(skillType) {
            const pointsRemaining = this.skillPoints[skillType].remaining;
            let continueButton;

            switch(skillType) {
                case 'archetype':
                    continueButton = document.getElementById('archetype-continue-btn');
                    break;
                case 'occupation':
                    continueButton = document.getElementById('occupation-continue-btn');
                    break;
                case 'general':
                    continueButton = document.getElementById('finish-btn');
                    break;
            }

            // Enable the continue button if all points are allocated
            if (pointsRemaining === 0) {
                continueButton.disabled = false;
            } else {
                continueButton.disabled = true;
            }
        };

        // Navigation functions
        window.characterUtils.continueToOccupation = function() {
            // Save archetype skill values to server
            // (in a real implementation, you would make an AJAX call here)
            // For now, we'll just switch tabs

            // Enable the occupation tab
            document.getElementById('occupation-tab').disabled = false;

            // Switch to the occupation tab
            const occupationTab = new bootstrap.Tab(document.getElementById('occupation-tab'));
            occupationTab.show();
        };

        window.characterUtils.continueToGeneral = function() {
            // Save occupation skill values to server
            // (in a real implementation, you would make an AJAX call here)

            // Enable the general tab
            document.getElementById('general-tab').disabled = false;

            // Switch to the general tab
            const generalTab = new bootstrap.Tab(document.getElementById('general-tab'));
            generalTab.show();
        };

        window.characterUtils.backToArchetype = function() {
            const archetypeTab = new bootstrap.Tab(document.getElementById('archetype-tab'));
            archetypeTab.show();
        };

        window.characterUtils.backToOccupation = function() {
            const occupationTab = new bootstrap.Tab(document.getElementById('occupation-tab'));
            occupationTab.show();
        };

        // Initialize when the document is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize skill values
            characterUtils.initializeSkillValues();

            // Set initial points remaining
            document.getElementById('archetype-points-remaining').textContent =
                characterUtils.skillPoints.archetype.remaining;
            document.getElementById('occupation-points-remaining').textContent =
                characterUtils.skillPoints.occupation.remaining;
            document.getElementById('general-points-remaining').textContent =
                characterUtils.skillPoints.general.remaining;

            // Check initial allocation
            characterUtils.checkSkillPointsAllocation('archetype');
            characterUtils.checkSkillPointsAllocation('occupation');
            characterUtils.checkSkillPointsAllocation('general');
        });
    </script>
}