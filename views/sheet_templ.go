// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "book-of-shadows/models"
import "strconv"
import "sort"
import "strings"
import "fmt"

func CharacterSheet(investigator *models.Investigator) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = hidden(investigator).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container-fluid p-4 coc-sheet\"><!-- Header & Lock/Unlock Toggle --><div class=\"d-flex justify-content-between align-items-center mb-4\"><h2 class=\"fw-bold\" style=\"color: #6d6875\">Character Sheet</h2><div class=\"lock-toggle d-flex align-items-center\"><span class=\"me-2 text-secondary small\">Lock Editing</span><div class=\"form-check form-switch\"><input class=\"form-check-input\" type=\"checkbox\" id=\"lockToggle\" role=\"switch\" onchange=\"characterUtils.toggleLock(this)\" style=\"width: 3em; height: 1.5em;\"> <label class=\"form-check-label visually-hidden\" for=\"lockToggle\">Lock Character Sheet Editing</label></div></div></div><!-- Character Header Card --><div class=\"card shadow-sm mb-4\" style=\"border-radius: 1rem; border: none; background: linear-gradient(135deg, #f8f9fa 0%, #f0f0f0 100%);\"><div class=\"card-body p-3\"><div class=\"d-flex align-items-center\"><div class=\"avatar me-3\" style=\"width: 60px; height: 60px; border-radius: 50%; background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white; display: flex; align-items: center; justify-content: center; font-size: 2rem; font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(string([]rune(investigator.Name)[0]))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 36, Col: 62}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><div><h3 class=\"mb-0 fw-bold\" style=\"color: #6d6875;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 39, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</h3><p class=\"mb-0 text-secondary\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Occupation.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 40, Col: 84}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Archetype.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 40, Col: 114}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</p></div><div class=\"ms-auto d-flex flex-wrap\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.ComponentScript{
			Name: "characterUtils.exportPDF",
			Call: fmt.Sprintf("characterUtils.exportPDF(event, '%s')", investigator.ID),
		})
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<button onclick=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 templ.ComponentScript = templ.ComponentScript{
			Name: "characterUtils.exportPDF",
			Call: fmt.Sprintf("characterUtils.exportPDF(event, '%s')", investigator.ID),
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var6.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" class=\"btn me-2\" style=\"background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white; border: none; border-radius: 0.5rem;\"><i class=\"bi bi-file-earmark-pdf me-2\"></i>Export PDF</button></div></div></div></div><!-- Personal Information --><div class=\"card shadow-sm mb-4\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-person-vcard me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Personal Information</h4></div><div class=\"card-body p-3\"><div class=\"row g-3\"><div class=\"col-md-4\"><label for=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 63, Col: 51}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" class=\"form-label\">Name</label> <input type=\"text\" id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 66, Col: 47}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 68, Col: 52}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" data-field=\"Name\" onchange=\"characterUtils.updatePersonalInfo(this)\"></div><div class=\"col-md-4\"><label for=\"inv-birth\" class=\"form-label\">Birthplace</label> <input id=\"inv-birth\" type=\"text\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Birthplace)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 79, Col: 58}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" data-field=\"Birthplace\" onchange=\"characterUtils.updatePersonalInfo(this)\"></div><div class=\"col-md-4\"><label for=\"inv-res\" class=\"form-label\">Residence</label> <input type=\"text\" id=\"inv-res\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Residence)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 90, Col: 57}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\" data-field=\"Residence\" onchange=\"characterUtils.updatePersonalInfo(this)\"></div></div><div class=\"row g-3 mt-1\"><div class=\"col-md-4\"><label class=\"form-label\">Occupation</label><p class=\"form-control-plaintext bg-light rounded px-2 py-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var12 string
		templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Occupation.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 100, Col: 114}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</p></div><div class=\"col-md-4\"><label class=\"form-label\">Archetype</label><p class=\"form-control-plaintext bg-light rounded px-2 py-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Archetype.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 104, Col: 113}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</p></div><div class=\"col-md-4\"><label for=\"inv-age\" class=\"form-label\">Age</label> <input type=\"number\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Age))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 111, Col: 65}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\" data-field=\"Age\" onchange=\"characterUtils.updatePersonalInfo(this)\"></div></div></div></div><!-- Characteristics and Combat Stats --><div class=\"row mb-4 g-3\"><!-- Characteristics --><div class=\"col-md-8\"><div class=\"card shadow-sm h-100\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-bar-chart-fill me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Characteristics</h4></div><div class=\"card-body p-3\"><div class=\"row g-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, attr := range investigator.Attributes {
			if !strings.HasPrefix(attr.Name, "Current") && !strings.HasPrefix(attr.Name, "Max") &&
				attr.Name != "HitPoints" && attr.Name != "MagicPoints" && attr.Name != "Sanity" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<div class=\"col-md-3 col-sm-4 mb-2\"><div class=\"characteristic-box p-2 rounded shadow-sm\" style=\"background-color: #f8f9fa; transition: all 0.2s ease; border: 1px solid rgba(0,0,0,0.05);\"><div class=\"d-flex justify-content-between align-items-center\"><strong style=\"color: #6d6875;\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var15 string
				templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(attr.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 137, Col: 90}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "</strong> <span class=\"value badge fw-bold\" style=\"background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white;\" data-attr=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var16 string
				templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(attr.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 138, Col: 187}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var17 string
				templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(attr.Value))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 138, Col: 214}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</span></div><div class=\"d-flex justify-content-end mt-1\"><small class=\"me-2 text-secondary\" title=\"Half value\" data-half>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var18 string
				templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(attr.Value / 2))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 141, Col: 139}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "</small> <small class=\"ms-2 text-secondary\" title=\"Fifth value\" data-fifth>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(attr.Value / 5))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 142, Col: 141}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "</small></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div></div></div></div><!-- Combat Stats --><div class=\"col-md-4\"><div class=\"card shadow-sm h-100\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-shield-fill me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Combat Stats</h4></div><div class=\"card-body p-3\"><div class=\"mb-3\"><label class=\"d-flex justify-content-between fw-medium\"><span style=\"color: #6d6875;\">Hit Points</span> <span class=\"text-secondary small\">Current / Max</span></label><div class=\"input-group\"><input type=\"number\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var20 string
		templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["HitPoints"].Value))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 170, Col: 99}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "\" data-attr=\"HitPoints\" title=\"CurrentHP\" min=\"0\" onchange=\"characterUtils.recalculateValues(this, &#39;attribute&#39;)\"> <span class=\"input-group-text\" style=\"background-color: #f1f1f1;\">/</span> <input type=\"number\" class=\"form-control\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["HitPoints"].MaxValue))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 180, Col: 102}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "\" readonly style=\"background-color: #f8f9fa;\"></div></div><div class=\"mb-3\"><label class=\"d-flex justify-content-between fw-medium\"><span style=\"color: #6d6875;\">Magic Points</span> <span class=\"text-secondary small\">Current / Max</span></label><div class=\"input-group\"><input type=\"number\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var22 string
		templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["MagicPoints"].Value))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 195, Col: 101}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\" data-attr=\"MagicPoints\" title=\"CurrentMP\" min=\"0\" onchange=\"characterUtils.recalculateValues(this, &#39;attribute&#39;)\"> <span class=\"input-group-text\" style=\"background-color: #f1f1f1;\">/</span> <input type=\"number\" class=\"form-control\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var23 string
		templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["MagicPoints"].MaxValue))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 205, Col: 104}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\" readonly style=\"background-color: #f8f9fa;\"></div></div><div class=\"mb-3\"><label class=\"d-flex justify-content-between fw-medium\"><span style=\"color: #6d6875;\">Sanity</span> <span class=\"text-secondary small\">Current / Max</span></label><div class=\"input-group\"><input type=\"number\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var24 string
		templ_7745c5c3_Var24, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["Sanity"].Value))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 220, Col: 96}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var24))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "\" data-attr=\"Sanity\" title=\"CurrentSanity\" onchange=\"characterUtils.recalculateValues(this, &#39;attribute&#39;)\" min=\"0\"> <span class=\"input-group-text\" style=\"background-color: #f1f1f1;\">/</span> <input type=\"number\" class=\"form-control\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var25 string
		templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["Sanity"].MaxValue))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 230, Col: 99}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "\" readonly style=\"background-color: #f8f9fa;\"></div></div><div class=\"mb-3\"><label class=\"fw-medium\" style=\"color: #6d6875;\">Luck</label> <input type=\"number\" class=\"form-control editable\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var26 string
		templ_7745c5c3_Var26, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Attributes["Luck"].Value))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 241, Col: 90}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var26))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "\" data-attr=\"Luck\" title=\"CurrentLuck\" min=\"0\" onchange=\"characterUtils.recalculateValues(this, &#39;attribute&#39;)\"></div><div class=\"d-flex flex-wrap gap-3\"><div class=\"stat-pill px-3 py-2 rounded-pill shadow-sm\" style=\"background-color: #f8f9fa; border: 1px solid rgba(0,0,0,0.05);\"><small class=\"d-block text-muted\">Move</small> <span class=\"fw-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var27 string
		templ_7745c5c3_Var27, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.Move))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 251, Col: 88}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var27))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "</span></div><div class=\"stat-pill px-3 py-2 rounded-pill shadow-sm\" style=\"background-color: #f8f9fa; border: 1px solid rgba(0,0,0,0.05);\"><small class=\"d-block text-muted\">Build</small> <span class=\"fw-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var28 string
		templ_7745c5c3_Var28, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.Build)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 255, Col: 75}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var28))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "</span></div><div class=\"stat-pill px-3 py-2 rounded-pill shadow-sm\" style=\"background-color: #f8f9fa; border: 1px solid rgba(0,0,0,0.05);\"><small class=\"d-block text-muted\">Damage Bonus</small> <span class=\"fw-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var29 string
		templ_7745c5c3_Var29, templ_7745c5c3_Err = templ.JoinStringErrs(investigator.DamageBonus)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 259, Col: 81}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var29))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "</span></div></div></div></div></div></div><!-- Status Checks --><div class=\"card shadow-sm mb-4\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-heart-pulse-fill me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Status Conditions</h4></div><div class=\"card-body p-3\"><div class=\"d-flex flex-wrap gap-3\"><div class=\"form-check form-switch\"><input class=\"form-check-input editable\" type=\"checkbox\" role=\"switch\" id=\"temp-insanity\" style=\"cursor: pointer;\"> <label class=\"form-check-label\" for=\"temp-insanity\" style=\"cursor: pointer;\">Temporary Insanity</label></div><div class=\"form-check form-switch\"><input class=\"form-check-input editable\" type=\"checkbox\" role=\"switch\" id=\"indef-insanity\" style=\"cursor: pointer;\"> <label class=\"form-check-label\" for=\"indef-insanity\" style=\"cursor: pointer;\">Indefinite Insanity</label></div><div class=\"form-check form-switch\"><input class=\"form-check-input editable\" type=\"checkbox\" role=\"switch\" id=\"major-wound\" style=\"cursor: pointer;\"> <label class=\"form-check-label\" for=\"major-wound\" style=\"cursor: pointer;\">Major Wound</label></div><div class=\"form-check form-switch\"><input class=\"form-check-input editable\" type=\"checkbox\" role=\"switch\" id=\"unconscious\" style=\"cursor: pointer;\"> <label class=\"form-check-label\" for=\"unconscious\" style=\"cursor: pointer;\">Unconscious</label></div><div class=\"form-check form-switch\"><input class=\"form-check-input editable\" type=\"checkbox\" role=\"switch\" id=\"dying\" style=\"cursor: pointer;\"> <label class=\"form-check-label\" for=\"dying\" style=\"cursor: pointer;\">Dying</label></div></div></div></div><!-- Skills Section --><div class=\"card shadow-sm mb-4\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-tools me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Skills</h4><div class=\"ms-auto skill-points\"><span class=\"badge rounded-pill me-1\" style=\"background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white;\"><i class=\"bi bi-briefcase-fill me-1\"></i>Occupation: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var30 string
		templ_7745c5c3_Var30, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.OccupationPoints))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 306, Col: 121}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var30))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "</span> <span class=\"badge rounded-pill me-1\" style=\"background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white;\"><i class=\"bi bi-book-fill me-1\"></i>Interest: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var31 string
		templ_7745c5c3_Var31, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.FreePoints))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 309, Col: 108}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var31))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "</span> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if investigator.ArchetypePoints > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "<span class=\"badge rounded-pill\" style=\"background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%); color: white;\"><i class=\"bi bi-person-fill me-1\"></i>Archetype: ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var32 string
			templ_7745c5c3_Var32, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(investigator.ArchetypePoints))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 313, Col: 120}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var32))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "</div></div><div class=\"card-body p-3\"><div class=\"skills-grid\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, skill := range sortSkills(investigator.Skills) {
			if skill.Name != "" && skill.Name != "Dodge_Copy" && skill.Base == 0 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, "<div class=\"skill-item p-2 mb-2 rounded shadow-sm\" style=\"background-color: #f8f9fa; transition: all 0.2s ease; border: 1px solid rgba(0,0,0,0.05);\"><div class=\"d-flex justify-content-between align-items-center\"><div class=\"d-flex align-items-center skill-name-container\"><div class=\"form-check me-2 flex-shrink-0\"><input type=\"checkbox\" class=\"form-check-input editable\" data-skill=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var33 string
				templ_7745c5c3_Var33, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 329, Col: 70}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var33))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if skill.IsSelected {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, " checked")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, " onchange=\"characterUtils.handleSkillToggleCheck(this)\" style=\"cursor: pointer; width: 1.1em; height: 1.1em;\"></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if skill.NeedsFormDef == 1 {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "<input type=\"text\" class=\"form-control form-control-sm editable\" style=\"width: 150px;\" value=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var34 string
					templ_7745c5c3_Var34, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 342, Col: 65}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var34))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "\" data-skill=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var35 string
					templ_7745c5c3_Var35, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 343, Col: 70}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var35))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "\" onchange=\"characterUtils.handleSkillNameChange(this)\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "<div class=\"skill-name-wrapper\"><span class=\"skill-name\" title=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var36 string
					templ_7745c5c3_Var36, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 348, Col: 90}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var36))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var37 string
					templ_7745c5c3_Var37, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 348, Col: 103}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var37))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "</span> <span class=\"skill-default ms-1 small text-secondary\">(")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var38 string
					templ_7745c5c3_Var38, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(skill.Default))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 349, Col: 131}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var38))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "%)</span></div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "</div><div class=\"d-flex align-items-center flex-shrink-0\"><div class=\"d-flex align-items-center\"><div class=\"input-group input-group-sm\" style=\"width: 120px;\"><input type=\"number\" class=\"form-control editable\" value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var39 string
				templ_7745c5c3_Var39, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(skill.Value))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 359, Col: 84}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var39))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, "\" data-skill=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var40 string
				templ_7745c5c3_Var40, templ_7745c5c3_Err = templ.JoinStringErrs(skill.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 360, Col: 74}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var40))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, "\" onchange=\"characterUtils.recalculateValues(this, &#39;skill&#39;)\" title=\"Regular\" min=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var41 string
				templ_7745c5c3_Var41, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(skill.Default))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 363, Col: 84}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var41))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "\"> <span class=\"input-group-text\" style=\"background-color: #f1f1f1;\">%</span></div><div class=\"derived-values ms-2 text-secondary small\"><span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var42 string
				templ_7745c5c3_Var42, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(skill.Value / 2))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 368, Col: 82}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var42))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "</span> <span class=\"mx-1\">/</span> <span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var43 string
				templ_7745c5c3_Var43, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(skill.Value / 5))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 370, Col: 82}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var43))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "</span></div></div></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "</div></div></div><!-- Pulp Talents Section -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(investigator.Talents) > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "<div class=\"card shadow-sm mb-4\" style=\"border-radius: 1rem; border: none;\"><div class=\"card-header d-flex align-items-center p-3\" style=\"background: rgba(109, 104, 117, 0.1); border: none; border-radius: 1rem 1rem 0 0;\"><i class=\"bi bi-stars me-2\" style=\"color: #6d6875;\"></i><h4 class=\"mb-0 fw-bold\" style=\"color: #6d6875; font-size: 1.1rem;\">Pulp Talents</h4></div><div class=\"card-body p-3\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, talent := range investigator.Talents {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, "<div class=\"talent-item p-3 mb-3 rounded shadow-sm\" style=\"background-color: #f8f9fa; border: 1px solid rgba(0,0,0,0.05); position: relative; overflow: hidden;\"><div style=\"position: absolute; top: 0; left: 0; width: 4px; height: 100%; background: linear-gradient(135deg, #6d6875 0%, #b5838d 100%);\"></div><h5 class=\"fw-bold\" style=\"color: #6d6875;\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var44 string
				templ_7745c5c3_Var44, templ_7745c5c3_Err = templ.JoinStringErrs(talent.Name)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 393, Col: 84}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var44))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "</h5><p class=\"mb-0 text-secondary\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var45 string
				templ_7745c5c3_Var45, templ_7745c5c3_Err = templ.JoinStringErrs(talent.Description)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 394, Col: 78}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var45))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, "</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "</div><style>\n        .coc-sheet {\n            font-family: 'Roboto', sans-serif;\n            background-color: #fff;\n            border-radius: 1rem;\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.08);\n            max-width: 1400px; /* Increased from 1200px */\n            width: 98%; /* Use almost full width */\n            margin: 0 auto;\n            padding: 0 10px; /* Add some internal padding */\n        }\n\n        .skills-grid {\n            column-count: 3;\n            column-gap: 20px;\n        }\n\n        .skill-item {\n            break-inside: avoid;\n            page-break-inside: avoid;\n            -webkit-column-break-inside: avoid;\n        }\n        \n        .skill-item:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.1) !important;\n            background-color: #fff !important;\n            border-color: rgba(181, 131, 141, 0.2) !important;\n        }\n        \n        /* Added: Skill name container styling */\n        .skill-name-container {\n            flex: 1;\n            min-width: 0; /* Important for text-overflow to work */\n            margin-right: 8px;\n        }\n        \n        /* Added: Skill name wrapper for overflow handling */\n        .skill-name-wrapper {\n            display: flex;\n            align-items: baseline;\n            min-width: 0; /* Important for text-overflow to work */\n            overflow: hidden;\n        }\n        \n        /* Added: Skill name ellipsis styling */\n        .skill-name {\n            color: #6d6875; \n            font-weight: 500;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            max-width: 180px; /* Increased from 150px */\n        }\n        \n        .characteristic-box:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.1) !important;\n            background-color: #fff !important;\n        }\n        \n        .stat-pill:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.1) !important;\n            background-color: #f0e6ea !important;\n        }\n        \n        /* Form element focus styles */\n        .form-control:focus {\n            border-color: #b5838d;\n            box-shadow: 0 0 0 0.25rem rgba(181, 131, 141, 0.25);\n        }\n        \n        /* Progress steps styling */\n        .step-indicator {\n            position: relative;\n            z-index: 1;\n        }\n        \n        .step-circle {\n            transition: all 0.3s;\n        }\n        \n        .step-label {\n            transition: all 0.3s;\n        }\n        \n        .step-indicator.completed .step-label {\n            color: #6d6875;\n        }\n        \n        .step-indicator.active .step-label {\n            color: #6d6875;\n            font-weight: 500;\n        }\n        \n        /* Disabled form elements when locked */\n        .form-control[disabled], \n        .form-check-input[disabled] {\n            background-color: #f8f9fa;\n            opacity: 0.8;\n            cursor: not-allowed;\n        }\n        \n        /* Lock toggle switch styling */\n        .form-switch .form-check-input {\n            background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\");\n            background-color: #adb5bd;\n            border-color: #adb5bd;\n            cursor: pointer;\n        }\n        \n        .form-switch .form-check-input:checked {\n            background-color: #b5838d;\n            border-color: #b5838d;\n        }\n        \n        /* Responsive adjustments */\n        @media (max-width: 1200px) {\n            .skills-grid {\n                column-count: 3;\n            }\n            \n            .skill-name {\n                max-width: 150px;\n            }\n        }\n        \n        @media (max-width: 992px) {\n            .skills-grid {\n                column-count: 2;\n            }\n            \n            .skill-name {\n                max-width: 200px; /* More space when in 2 columns */\n            }\n        }\n\n        @media (max-width: 576px) {\n            .skills-grid {\n                column-count: 1;\n            }\n            \n            .skill-name {\n                max-width: 250px; /* More space on mobile since it's full width */\n            }\n        }\n\n    </style><script>\n        // Extend characterUtils with locking functionality\n        if (!window.characterUtils) {\n            window.characterUtils = {};\n        }\n        \n        // Toggle lock function\n        window.characterUtils.toggleLock = function(checkbox) {\n            const isLocked = checkbox.checked;\n            \n            // Get all editable elements\n            const editables = document.querySelectorAll('.editable');\n            \n            editables.forEach(element => {\n                element.disabled = isLocked;\n            });\n            \n            // Show a message \n            const lockMessage = isLocked ? 'Character sheet is now locked. Unlock to make changes.' : 'Character sheet is now editable.';\n            const toast = document.createElement('div');\n            toast.className = 'position-fixed bottom-0 end-0 p-3';\n            toast.style.zIndex = 1050;\n            toast.innerHTML = `\n                <div class=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                    <div class=\"toast-header\">\n                        <strong class=\"me-auto\">${isLocked ? '🔒 Locked' : '🔓 Unlocked'}</strong>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\" onclick=\"this.parentElement.parentElement.remove()\"></button>\n                    </div>\n                    <div class=\"toast-body\">\n                        ${lockMessage}\n                    </div>\n                </div>\n            `;\n            document.body.appendChild(toast);\n            \n            // Remove toast after 3 seconds\n            setTimeout(() => {\n                toast.remove();\n            }, 1500);\n        };\n        \n        // Ensure we keep the original recalculateValues function for attributes\n        const originalRecalculateValues = window.characterUtils.recalculateValues || function() {};\n        \n        // Override with enhanced version that ensures attributes are updated\n        window.characterUtils.recalculateValues = function(input, type) {\n            let value = parseInt(input.value) || 0;\n            \n            // Update half and fifth values if applicable\n            const container = input.closest('.characteristic-box') || input.parentElement;\n            const halfSpan = container.querySelector('[data-half]');\n            const fifthSpan = container.querySelector('[data-fifth]');\n            \n            if (halfSpan) halfSpan.textContent = Math.floor(value / 2);\n            if (fifthSpan) fifthSpan.textContent = Math.floor(value / 5);\n            \n            // Handle attribute updates\n            if (type === 'attribute') {\n                const attrName = input.dataset.attr;\n                \n                // Get character data if it exists\n                const charData = this.getCurrentCharacter();\n                if (charData && charData.attributes && charData.attributes[attrName]) {\n                    charData.attributes[attrName].value = value;\n                }\n                \n                // Update the server with the new value\n                this.updateInvestigator(\"combat\", attrName, value)\n                    .then(() => {\n                        // Add visual feedback\n                        input.classList.add('bg-success', 'bg-opacity-10');\n                        setTimeout(() => {\n                            input.classList.remove('bg-success', 'bg-opacity-10');\n                        }, 300);\n                    })\n                    .catch(error => {\n                        console.error('Error updating attribute:', error);\n                        input.classList.add('bg-danger', 'bg-opacity-10');\n                        setTimeout(() => {\n                            input.classList.remove('bg-danger', 'bg-opacity-10');\n                        }, 300);\n                    });\n            } \n            // Handle skill updates - call original function\n            else if (type === 'skill') {\n                // Update skill derived values (half/fifth)\n                const skillItem = input.closest('.skill-item');\n                if (skillItem) {\n                    const derivedValues = skillItem.querySelector('.derived-values');\n                    if (derivedValues) {\n                        const spans = derivedValues.querySelectorAll('span');\n                        if (spans.length >= 3) {\n                            spans[0].textContent = Math.floor(value / 2);\n                            spans[2].textContent = Math.floor(value / 5);\n                        }\n                    }\n                }\n                \n                if (typeof originalRecalculateValues === 'function') {\n                    originalRecalculateValues.call(this, input, type);\n                }\n            }\n        };\n        \n        // Initialize the form on load\n        document.addEventListener('DOMContentLoaded', function() {\n            // Add hover effects to stat pills and characteristic boxes\n            const hoverElements = document.querySelectorAll('.stat-pill, .characteristic-box, .skill-item');\n            hoverElements.forEach(element => {\n                element.addEventListener('mouseenter', function() {\n                    if (!this.closest('.card').classList.contains('locked')) {\n                        this.style.backgroundColor = '#f0f0f0';\n                    }\n                });\n                element.addEventListener('mouseleave', function() {\n                    if (!this.closest('.card').classList.contains('locked')) {\n                        this.style.backgroundColor = '#f8f9fa';\n                    }\n                });\n            });\n            \n            // Adjust skill names dynamically based on available space\n            const adjustSkillNames = function() {\n                const skillItems = document.querySelectorAll('.skill-item');\n                skillItems.forEach(item => {\n                    const container = item.querySelector('.skill-name-container');\n                    const nameWrapper = item.querySelector('.skill-name-wrapper');\n                    const name = item.querySelector('.skill-name');\n                    \n                    if (container && nameWrapper && name) {\n                        // Calculate available width\n                        const containerWidth = container.offsetWidth;\n                        \n                        // Adjust max-width dynamically if needed\n                        if (containerWidth < 120) {\n                            name.style.maxWidth = (containerWidth - 30) + 'px';\n                        }\n                    }\n                });\n            };\n            \n            // Run initially and on window resize\n            adjustSkillNames();\n            window.addEventListener('resize', adjustSkillNames);\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func sortSkills(skills map[string]models.Skill) []models.Skill {
	// Create a slice to hold the skills
	var skillSlice []models.Skill

	// Convert map to slice
	for _, skill := range skills {
		if skill.Name != "" && skill.Name != "Dodge_Copy" {
			skillSlice = append(skillSlice, skill)
		}
	}

	// Sort the slice by name
	sort.Slice(skillSlice, func(i, j int) bool {
		return skillSlice[i].Name < skillSlice[j].Name
	})

	return skillSlice
}

func hidden(investigator *models.Investigator) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var46 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var46 == nil {
			templ_7745c5c3_Var46 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "<input type=\"hidden\" id=\"currentCharacter\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var47 string
		templ_7745c5c3_Var47, templ_7745c5c3_Err = templ.JoinStringErrs(mustJson(investigator))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/sheet.templ`, Line: 723, Col: 38}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var47))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
