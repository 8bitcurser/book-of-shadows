package views

import "book-of-shadows/models"
import "sort"
import "fmt"
import "encoding/json"


templ InvestigatorsList(investigators map[string]*models.Investigator) {

        <div class="btn-group" role="group">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exportModal">
                Export
            </button>
            <button type="button" class="btn btn-primary " data-bs-toggle="modal" data-bs-target="#importModal">
                Import
            </button>
        </div>

        <br>

        // Export Modal
        <div id="exportModal" class="modal fade" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5">
                            Export Investigators
                        </h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <textarea class="form-control" id="exportCode" disabled
                            hx-get="/api/investigator/list/export"
                            hx-trigger="load"
                            hx-swap="innerHTML"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button
                            onclick="navigator.clipboard.writeText(document.getElementById('exportCode').value);"
                            type="button" class="btn btn-primary" data-bs-dismiss="modal">Copy Code</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        // Import Modal
        <div id="importModal" class="modal fade" tabindex="-1" aria-labelledby="importModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5">Import Investigators</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <textarea class="form-control" id="importCode" placeholder="Paste export code here"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button
                            onclick="characterUtils.importInvestigators();"
                            type="button" class="btn btn-primary" hx-swap="none" data-bs-dismiss="modal">Import</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            for _, inv := range sortInvestigators(investigators) {
                <div class="col-sm-2 p-3">
                    <div class="card border-light" style="width: 18rem;">
                        <img src="/static/profile.jpg" class="card-img-top" style="max-height: 250px" alt="investigator-profile">
                        <hr>
                        <div class="card-body">
                            <h3 class="card-title">
                                <a class="link-dark link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" hx-get={ fmt.Sprintf("/api/investigator/%s", inv.ID) } hx-target="#character-sheet"> { inv.Name } </a>
                             </h3>
                            <p class="card-text">{ inv.Occupation.Name }</p>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target={fmt.Sprintf("#d-%s", inv.ID)}>Destroy</button>
                            <a hx-swap="none" onclick={ templ.ComponentScript{
                                                        Name: "characterUtils.exportPDF",
                                                        Call: fmt.Sprintf("characterUtils.exportPDF(event, '%s')", inv.ID),
                                                    }} class="btn btn-secondary" >PDF</a>
                            // Delete Modal
                            <div class="modal fade" id={fmt.Sprintf("d-%s", inv.ID)}  data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h1 class="modal-title fs-5" id="deleteModalLabel">Are you sure?</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p>This action is permanent: {inv.Occupation.Name}, {inv.Name} will be deleted</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <a
                                                class="btn btn-danger"
                                                hx-delete={fmt.Sprintf("/api/investigator/delete/%s", inv.ID)}
                                                hx-target="closest div"
                                                data-bs-dismiss="modal"
                                            >
                                                Delete
                                            </a>
                                            <div
                                                hx-get="/api/investigator/list"
                                                hx-trigger="deleted from:body"
                                                hx-target="#character-sheet"
                                                style="display: none; z-index: -1"
                                            >
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
}


func sortInvestigators(invs map[string]*models.Investigator) []*models.Investigator {
    // Create a slice to hold the skills
    var investigatorSlice []*models.Investigator

    // Convert map to slice
    for _, inv := range invs {
        investigatorSlice = append(investigatorSlice, inv)
    }


    // Sort the slice by name
    sort.Slice(investigatorSlice, func(i, j int) bool {
        return investigatorSlice[i].ID < investigatorSlice[j].ID
    })

    return investigatorSlice
}

func mustJson(v interface{}) string {
    b, err := json.Marshal(v)
    if err != nil {
        return ""
    }
    return string(b)
}
type skillItem struct {
    Name  string
    Value int
}